<!DOCTYPE HTML>

<html>

    <head>
        <title>Chart the Stock Market</title>
        
        <!-- JQUERY -->
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.2/jquery.min.js"></script>
        
        <!-- THE NEXT THREE ARE BOOTSTRAP -->
        <!-- Latest compiled and minified CSS -->
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">

        <!-- Optional theme -->
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css" integrity="sha384-fLW2N01lMqjakBkx3l/M9EahuwpSfeNvV63J5ezn3uZzapT0u7EYsXMjQV+0En5r" crossorigin="anonymous">

        <!-- Latest compiled and minified JavaScript -->
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
        
        
        <!-- D3 CDN -->
        <script src="https://d3js.org/d3.v4.min.js"></script>
        
        <!-- My Docs -->
        <link href="style.css" type="text/css" rel="stylesheet" />
        
        <!--SOCKET.IO-->
        <script src="https://cdn.socket.io/socket.io-1.4.5.js"></script>
        
        
        <script>
            //Socket.io script
            var socket = io.connect("http://localhost:3000/");
            
            socket.on("new_stock", function(data) {
                
                //If we get a message that someone has added a new stock then update our chart
                //Get the prices and reverse array so that it's charted correctly
                var prices = data.data.reverse();
                var ticker = data.ticker;


                //Slice the price array so that we are starting at the start date
                var date = new Date();

                var year = date.getFullYear();
                var month = date.getMonth() + 1;
                var day = date.getUTCDate();


                //Create a new date that goes back a year (or other amount of time if we want later)
                var start_date = new Date(month + "/" + day + "/" + (year - 1));

                //Find the index where api data matches our start date
                var start_index = prices.findIndex(function(element, index, array) {

                    return new Date(array[index].date) >= start_date;

                });

                //Slice the api data so that we are only charting from our start date forward
                prices = prices.slice(start_index);




                //Append new stock to the chart

                //Set up needed variables and select the chart on the page

                //Set height and width
                var w = 1000;
                var h = 450;

                //Set chart margins
                var margin = {
                        top: 50,
                        bottom: 75,
                        right: 50,
                        left: 100
                    }


                var height = h - margin.top - margin.bottom;
                var width = w - margin.left - margin.right;

                var y = d3.scaleLinear()
                    .domain([0, (d3.max(prices, function(d) {
                        return d.close;
                    }) + 5)])
                    .range([height, 0]);

                var x = d3.scaleLinear()
                    .domain([0, prices.length])
                    .range([0, width]);



                var chart = d3.select(".display");



                //Create "dot" class and bind the data to the svg
                chart.selectAll(".dot")
                    .data(prices)
                    .enter()
                        .append("rect")
                        .classed("dot", true)
                        .attr("x", function(d, i) {
                            return x(i);
                        })
                        .attr("y", function(d, i) {
                            return y(d.close);
                        })
                        .attr("width", function(d, i) {
                            return 1;
                        })
                        .attr("height", function(d, i) {
                            return 1;
                        });


                //Draw the line on the chart
                chart.call(function(d, i){

                    //Get a random color
                    var colors = ["#CCC", "#4d9e2e", "#5ae8d7", "#1f46bf", "#670ec1", "#de29b4", "#ec4b5f", "#e0dd09", "#09e0d0", "#c5adce"];

                    var random = Math.floor(Math.random() * 10);

                    for (var j = 0; j < prices.length; j++) {

                        if ((j+1) === prices.length) {
                            break;
                        }

                        chart.append("line")
                            .style("stroke", colors[random])
                            .style("stroke-width", 2)
                            .classed(ticker.toUpperCase(), true)
                            .attr( "y1", y(prices[j].close) )
                            .attr( "y2", y(prices[j+1].close) )
                            .attr( "x1", x(j) )
                            .attr( "x2", x(j+1) );

                    }


                    $(".row").append("<div style='color:" + colors[random] + "' class='stock " + ticker.toUpperCase() + " col-xs-4'><div data-internalid='" + ticker.toUpperCase() + "' class='stock_holder'><h3>" + ticker.toUpperCase() + "</h3><button type='button' class='btn btn-danger btn-sm remove_stock'>Remove</button></div></div>");

                });
                
                
                
            }); //End socket.io new_stock
            
            
            
            socket.on("remove_stock", function(ticker) {
                
                console.log("I need to remove a stock");
                
                
                console.log($(ticker));
                
                $("." + ticker).remove();
            });
            
 
        </script>
        
        
        
        <script>
            
            //Make holder list for stock prices
            var prices = [];
            var data;
            
            
            //Put prices into prices list through EJS loop in the server
            //FOR USE IN THE javascript.js SCRIPT
            <% for (var i in data) { %>
            
                data = {
                    date: new Date('<%= data[i].date %>'),
                    close: <%= data[i].close %>
                }
                
                prices.push(data);
                
                //prices.push(<%= data[i].close %>);
            <% } %>
            


            
            //Reverse the list because Quandl API lists most recent prices first
            prices.reverse();

            
            //Prices variable for testing the chart functionality below
            //prices = [1, 23, 10, 50, 25, 27, 17, 12, 39, 44, 21, 100];
            
        
        </script>
        
        <script src="chart.js"></script>
        <script src="javascript.js"></script>
    
    
    </head>
    
    
    
    <body>
        
        <h1 class="text-center">Chart the Stock Market</h1>
        
        <div class="add_stock col-xs-4 col-xs-offset-4">
            <div class="input-group">
                <input type="text" class="form-control ticker_text" placeholder="Ticker Symbol" />
                <span class="input-group-btn">
                    <button class="btn btn-success get_stock" type="button">Add</button>
                </span>
            </div>
        </div> <!-- end add stock -->
        
        <br />
        <div class="error_text col-xs-12 no_show text-center"><p>Incorrect Symbol</p></div>
        
        
        <div class="holder col-xs-8 col-xs-offset-2">

            <div class="row">
            
            
            </div>
            
        
        </div>
            


        
        
    </body>





</html>